/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Final;

import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import static java.lang.Integer.parseInt;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.text.BadLocationException;

/**
 *
 * @author CRISTHIAN
 */
public class Notas extends javax.swing.JFrame {

    //variables
    JFileChooser seleccionar = new JFileChooser();
    File archivo;
    FileInputStream entrada;
    FileOutputStream salida;
    
    String title = "";//titulo del texto
    
    
    public Notas() {
        initComponents();
        lineandColumn();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnOpen = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnSaveAs = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();
        btnOption = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        lblSoltarFichero = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnOpen.setText("open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        btnSave.setText("save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnSaveAs.setText("save as");
        btnSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAsActionPerformed(evt);
            }
        });

        btnHelp.setText("help");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        btnOption.setText("option");
        btnOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOptionActionPerformed(evt);
            }
        });

        btnNew.setText("new");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        lblSoltarFichero.setText("lin:  col: ");
        lblSoltarFichero.setPreferredSize(new java.awt.Dimension(54, 32));

        txtArea.setBackground(new java.awt.Color(51, 51, 51));
        txtArea.setColumns(20);
        txtArea.setFont(new java.awt.Font("Monospaced", 1, 15)); // NOI18N
        txtArea.setForeground(new java.awt.Color(255, 255, 255));
        txtArea.setRows(5);
        txtArea.setCaretColor(new java.awt.Color(255, 255, 255));
        txtArea.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtArea.setSelectedTextColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(txtArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnOpen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSaveAs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHelp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSoltarFichero, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOpen)
                    .addComponent(btnHelp)
                    .addComponent(btnOption)
                    .addComponent(btnSave)
                    .addComponent(btnSaveAs)
                    .addComponent(btnNew)
                    .addComponent(lblSoltarFichero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        JOptionPane.showMessageDialog(null, "Editor simple text by Jhon Cristhian");
    }//GEN-LAST:event_btnHelpActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        Nuevo();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        open();
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        save();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAsActionPerformed
        saveAs();
    }//GEN-LAST:event_btnSaveAsActionPerformed

    private void btnOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOptionActionPerformed
        cambiarColorTextArea();
    }//GEN-LAST:event_btnOptionActionPerformed
    
    //***************************funciones*////////////////////////////////////////



    public void cambiarColorTextArea() {
        //aqui ya se puede aumentar mas funcionalidades o ajustes, siempre en cuando sean necesarias.
        JOptionPane vent = new JOptionPane();
        String mostrar = "1. letter size\n2. font";
        int varia = parseInt(vent.showInputDialog(null, mostrar));
     
        if (varia==1) {
            mostrar = "insert number:";
            varia = parseInt(vent.showInputDialog(null, mostrar));
            txtArea.setFont(new Font("Dialog", Font.PLAIN, varia));
            
            
        
        
        }else if(varia==2){
            mostrar = "insert number:\n1.Dialog \n2.Agency FB \n3.Arial\n4.Calibri\n5.Century\n6.Consolas\n7.Lucida Console\n8.Monospaced";
            varia = parseInt(vent.showInputDialog(null, mostrar));
            switch(varia){
                case 1:
                    txtArea.setFont(new Font("Dialog", Font.PLAIN, txtArea.getFont().getSize()));
                    break;
                case 2:
                    txtArea.setFont(new Font("Agency FB", Font.PLAIN, txtArea.getFont().getSize()));
                    break;
                case 3:
                    txtArea.setFont(new Font("Arial", Font.PLAIN, txtArea.getFont().getSize()));
                    break;
                case 4:
                    txtArea.setFont(new Font("Calibri", Font.PLAIN, txtArea.getFont().getSize()));
                    break;
                case 5:
                    txtArea.setFont(new Font("Century", Font.PLAIN, txtArea.getFont().getSize()));
                    break;
                case 6:
                    txtArea.setFont(new Font("Consolas", Font.PLAIN, txtArea.getFont().getSize()));
                    break;
                case 7:
                    txtArea.setFont(new Font("Lucida Console", Font.PLAIN, txtArea.getFont().getSize()));
                    break;
                case 8:
                    txtArea.setFont(new Font("Monospaced", Font.PLAIN, txtArea.getFont().getSize()));
                    break;
            }
            
        }else{
            vent.showMessageDialog(null, "opcion invaled");
        }
        
        
    }

    //method of choose file
    public void open() {
        if (seleccionar.showDialog(null, "Abrir") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionar.getSelectedFile();
            if (archivo.canRead()) {
                if (archivo.getName().endsWith("txt") || archivo.getName().endsWith("html") || archivo.getName().endsWith("css") || archivo.getName().endsWith("js") || archivo.getName().endsWith("")) {
                    String documento = AbrirArchivo(archivo);
                    txtArea.setText(documento);
                } else {
                    JOptionPane.showMessageDialog(null, "archivo no compatible");
                }
            }
        }
    }

    public String AbrirArchivo(File archivo) {
        String documento = "";
        try {
            entrada = new FileInputStream(archivo);
            int ascii;
            while ((ascii = entrada.read()) != -1) {
                char caracter = (char) ascii;
                documento += caracter;

            }
        } catch (Exception e) {
        }
        return documento;
    }

    public String GuardarArchivo(File archivo, String documento) {
        String mensaje = null;
        try {
            salida = new FileOutputStream(archivo);
            byte[] bytext = documento.getBytes();
            salida.write(bytext);
            mensaje = "Archivo Guardado";
        } catch (Exception e) {
        }
        return mensaje;
    }

    //method of save
    public void saveAs() {
        if (seleccionar.showDialog(null, "Guardar") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionar.getSelectedFile();
            if (archivo.getName().endsWith("")) {
                String documento = txtArea.getText();
                String mensaje = GuardarArchivo(archivo, documento);
                title = archivo.getName().toString();//aqui asignamos el nombre
                setTitle(title + "- Spectre");
                if (mensaje == null) {
                    JOptionPane.showMessageDialog(null, "archivo no compatible");
                }
            }
        }
    }

    

    //cuando damos a new
    public void Nuevo() {
        Notas nueva = new Notas();
        nueva.setVisible(true);
        nueva.setDefaultCloseOperation(1);
    }

    public void save() {
        //este metodo es para guardar 
        if (title.equals("")) {//cuando es un archivo vacio
            saveAs();
        } else {//cuando ya existe el archivo
            String documento = txtArea.getText();
            String mensaje = GuardarArchivo(archivo, documento);
            title = archivo.getName().toString();//aqui asignamos el nombre
            setTitle(title + "- Spectre");
            if (mensaje == null) {
                JOptionPane.showMessageDialog(null, "archivo no compatible");
            }
        }
    }

    

    //evento para obtener una linea y columna
    public void lineandColumn() {
        txtArea.addCaretListener(new CaretListener() {
            public void caretUpdate(CaretEvent e) {
                int pos = e.getDot();
                try {
                    int row = txtArea.getLineOfOffset(pos) + 1;
                
                int col = pos - txtArea.getLineStartOffset(row - 1) + 1;
                
                lblSoltarFichero.setText("lin: " + row + " col: " + col);
                }catch(BadLocationException ex) {
                    System.out.println(""+ex.getMessage());
                }
            }
        });

    }
    
    //metodo de registro de archivos escritos
    public void InRecentFiles(){
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnHelp;
    public javax.swing.JButton btnNew;
    public javax.swing.JButton btnOpen;
    public javax.swing.JButton btnOption;
    public javax.swing.JButton btnSave;
    public javax.swing.JButton btnSaveAs;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSoltarFichero;
    public javax.swing.JTextArea txtArea;
    // End of variables declaration//GEN-END:variables
}
